<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.bswill.mapper.SalaryMapper">

	<!-- 급여조회 -->
	
    <!-- 급여 목록 조회(전체, 임시) -->
    <select id="selectSalaryList" resultType="com.bswill.domain.SalaryVO">
       select * from tbl_salary
       order by employee_id asc
    </select>
    
    <!-- 급여년월에 따른 급여 조회(전체) -->
	<select id="selectSalaryAllSearch" resultType="map">
		select pay_yearmonth, emp.employee_id, emp_name, emp.JOB_ID, salary, premium, sum
		from tbl_employee emp
		inner join tbl_salarylist slist on emp.employee_id = slist.employee_id
    </select>
    
    <!-- 급여년월에 따른 급여 조회(급여목록) -->
    <select id="selectSalarySearchEmp" resultType="map">
		select pay_yearmonth, emp.employee_id, emp_name, emp.JOB_ID, salary, premium, sum
		from tbl_employee emp
		inner join tbl_salarylist slist on emp.employee_id = slist.employee_id
		where DATE_FORMAT(slist.pay_yearmonth, '%Y-%m') = #{keyword};
    </select>
    
    <!-- 급여년월에 따른 급여 조회(급여명세서) -->
    <select id="selectSalarySearchMore" resultType="map">
		select salary, round((salary * job.ratio_bonus)) as bonus, 
		round((salary * 0.045)) as premium_1, round((salary * 0.035)) as premium_2, 
		round((salary * 0.120)) as premium_3, round((salary * 0.009)) as premium_4,
		round((salary * job.ratio_premium)) as premium, 
		round(((salary + salary * job.ratio_bonus) - (salary * job.ratio_premium))) as sum
		from tbl_employee emp
		inner join tbl_salary sal on emp.employee_id = sal.employee_id 
		inner join tbl_job job on emp.JOB_id = job.JOB_id 
		where emp.employee_id = #{employee_id};
    </select>
    
    <!-- 급여년월에 따른 월별 급여 조회 -->
    <select id="selectSalarySearchMonthly" resultType="map">
		select emp.employee_id, emp_name, JOB_ID, department
		from tbl_employee emp
		inner join tbl_salarylist slist on emp.employee_id = slist.employee_id
		where DATE_FORMAT(slist.pay_yearmonth, '%Y-%m') = #{keyword};
    </select>
    
    <!-- 급여조회 -->
    
    <!-- 급상여기본정보입력 -->
    
    <!-- 급상여기본정보입력 기본정보 조회  -->
    <!-- <select id="selectSalaryInfoEmp" resultType="com.bswill.domain.EmployeeVO"> -->
    <select id="selectSalaryInfoEmp" resultType="map">
	    select employee_id, emp_name, JOB_ID, department
		from tbl_employee
		where DATE_FORMAT(start_date, '%Y') = #{keyword};
    </select>
    
    <!-- 급상여기본정보입력 상세정보 조회 -->
    <!-- <select id="selectSalaryInfoMore" resultType="com.bswill.domain.EmployeeVO"> -->
    <select id="selectSalaryInfoMore" resultType="map">
		select emp.employee_id, emp_name, JOB_ID, department, sal.bank, sal.account, sal.account_holder
		from tbl_employee emp
		inner join tbl_salary sal on emp.employee_id = sal.employee_id 
		where emp.employee_id = #{employee_id};
    </select>
    
    <!-- 급상여기본정보입력 상세정보 입력(수정) -->
    <update id="updateSalaryInfo">
    	update tbl_salary set bank = #{bank}, account = #{account}, account_holder = #{account_holder}
    	where employee_id = #{employee_id};
    </update>
    
    <!-- 급상여기본정보입력 -->
    
    <!-- 급여 입력 -->
    
    <!-- 급여입력 기본정보 조회 -->
    <select id="selectSalaryEnterEmp" resultType="map">
	    select employee_id, emp_name, JOB_ID, department
		from tbl_employee
		where DATE_FORMAT(start_date, '%Y') = #{keyword};
    </select>
    
    <!-- 급여입력 급여정보 조회 -->
    <select id="selectSalaryEnterMore" resultType="map">
		select salary
		from tbl_salary
		where employee_id = #{employee_id};
    </select>
    
    <!-- 급여입력 급여정보 생성 -->
    <insert id="insertSalaryEnter">
    	insert into tbl_salarylist (pay_yearmonth, employee_id, JOB_ID, salary, bonus, premium, sum)
    	value (now(), #{employee_id}, #{JOB_ID}, #{salary}, 0, 0, 0} 
    </insert>	
    
    <!-- 급여입력 급여정보 계산 -->
    <select id="selectSalaryEnter" resultType="map">
		select salary, round((salary * job.ratio_bonus)) as bonus, 
		round((salary * 0.045)) as premium_1, round((salary * 0.035)) as premium_2, 
		round((salary * 0.120)) as premium_3, round((salary * 0.009)) as premium_4,
		round((salary * job.ratio_premium)) as premium, 
		round(((salary + salary * job.ratio_bonus) - (salary * job.ratio_premium))) as sum
		from tbl_employee emp
		inner join tbl_salary sal on emp.employee_id = sal.employee_id 
		inner join tbl_job job on emp.JOB_id = job.JOB_id 
		where emp.employee_id = #{employee_id};
    </select>
    
    <!-- 급여입력 급여정보 저장(수정) -->
    <update id="updateSalaryEnter">
    	update tbl_salarylist set salary, bonus, premium, sum
    	where employee_id = #{employee_id};
    </update>
    <!-- 급여 입력 -->
    
</mapper>
